import React, { useState } from 'react';
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { Calendar, MapPin, Phone } from "lucide-react";

export default function BookingModal({ equipment, onClose, onBook }) {
  const [bookingData, setBookingData] = useState({
    start_date: '',
    end_date: '',
    notes: ''
  });
  const [loading, setLoading] = useState(false);

  const calculateTotal = () => {
    if (bookingData.start_date && bookingData.end_date) {
      const start = new Date(bookingData.start_date);
      const end = new Date(bookingData.end_date);
      const days = Math.ceil((end - start) / (1000 * 60 * 60 * 24)) + 1;
      return days * equipment.rental_price_per_day;
    }
    return 0;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    
    try {
      await onBook({
        equipment_id: equipment.id,
        ...bookingData,
        total_cost: calculateTotal()
      });
    } catch (error) {
      console.error('Error booking equipment:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleChange = (field, value) => {
    setBookingData(prev => ({ ...prev, [field]: value }));
  };

  return (
    <Dialog open={true} onOpenChange={onClose}>
      <DialogContent className="max-w-md">
        <DialogHeader>
          <DialogTitle>Book Equipment</DialogTitle>
        </DialogHeader>

        <div className="space-y-4">
          <div className="bg-gray-50 p-4 rounded-lg">
            <h3 className="font-semibold text-lg">{equipment.name}</h3>
            <div className="flex items-center gap-2 mt-2 text-sm text-gray-600">
              <MapPin className="w-4 h-4" />
              {equipment.location}
            </div>
            {equipment.contact_number && (
              <div className="flex items-center gap-2 mt-1 text-sm text-gray-600">
                <Phone className="w-4 h-4" />
                {equipment.contact_number}
              </div>
            )}
            <div className="mt-2 text-lg font-bold text-green-600">
              ₹{equipment.rental_price_per_day}/day
            </div>
          </div>

          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div>
                <Label htmlFor="start_date">Start Date</Label>
                <Input
                  id="start_date"
                  type="date"
                  value={bookingData.start_date}
                  onChange={(e) => handleChange('start_date', e.target.value)}
                  required
                  min={new Date().toISOString().split('T')[0]}
                />
              </div>
              
              <div>
                <Label htmlFor="end_date">End Date</Label>
                <Input
                  id="end_date"
                  type="date"
                  value={bookingData.end_date}
                  onChange={(e) => handleChange('end_date', e.target.value)}
                  required
                  min={bookingData.start_date || new Date().toISOString().split('T')[0]}
                />
              </div>
            </div>

            <div>
              <Label htmlFor="notes">Additional Notes</Label>
              <Textarea
                id="notes"
                value={bookingData.notes}
                onChange={(e) => handleChange('notes', e.target.value)}
                placeholder="Any special requirements or instructions"
                rows={3}
              />
            </div>

            {calculateTotal() > 0 && (
              <div className="bg-green-50 p-4 rounded-lg">
                <div className="flex justify-between items-center">
                  <span className="font-medium">Total Cost:</span>
                  <span className="text-2xl font-bold text-green-600">
                    ₹{calculateTotal()}
                  </span>
                </div>
              </div>
            )}

            <div className="flex justify-end gap-3">
              <Button type="button" variant="outline" onClick={onClose}>
                Cancel
              </Button>
              <Button 
                type="submit" 
                disabled={loading || calculateTotal() === 0}
                className="bg-green-600 hover:bg-green-700"
              >
                <Calendar className="w-4 h-4 mr-2" />
                {loading ? 'Booking...' : 'Book Equipment'}
              </Button>
            </div>
          </form>
        </div>
      </DialogContent>
    </Dialog>
  );
}
